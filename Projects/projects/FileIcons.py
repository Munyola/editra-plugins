#----------------------------------------------------------------------
# This file was generated by /usr/local/bin/img2py
#
from wx import ImageFromStream, BitmapFromImage, EmptyIcon
import cStringIO, zlib


def getBadgeAddedData():
    return zlib.decompress(
"x\xda\x01z\x02\x85\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x021IDAT8\x8d\x95\x92\xcdK\x94Q\x14\xc6\x9f{\
\xdf\xb9\xef\x8c3c\xe3\x18\x9a(!\x95\x1f\r-ZDA\x98H\x9b\xfe\x83\x90 i\xd56Z\
\x04AA\xf8\x0f\xb4jQ\x9b\x16\xed\xa4E-\xdbE\x14XIm*\x08B\xdd\xe4X\xf3\xe1\
\xf8:_\xef\xd7=\xe7\xb4P\xd3\x01G\xea\xc2\xc3\xb9\x87\xf3<?.\x9c\xabD\x04\
\xddN\xe5\xd3\xcc9\xb0\x8c\x0e\\x\xfb\xa2\x9bGwM\x03\x10\xe6\x05a~z\x98\xa7+\
\xa0\xfcqz6a\xb2c\t\xb7\xb7\xef\xf7\xbb\x8b\xf3\xff\r\x10\xe6\xc7&u\x04nO\
\x1eL|\xaf\xf8\xfa\xbc\xfb\xcf\x80\xd2\xe2\xd4\xbcI\xe5\xf2\xdaI\x02\x00\x8c\
\xdbk\xc4\xf2\xb3\x83\xbc\xaa\xf2y&+,W\x85\xf9\nX\xce\n\xcb\xa8\xe9\xc9\xa5\
\x93\x99~pT\x05\x07\r\xa8\xc4\x08|\xaf\x84\xb0\xe5\xf9BR\x14\xe2\xaf\xc2\xfc\
F\x88_\xaa\xf2\xd2\xf47\x93\xe9;\xe3$3p\xb4\x0b@C\xb1\x80\x82\x12l\xab\x08\
\x89-\x04Yh3\x02\x89-(\na\xc3\x00q\xd8F\xd8\xaeW\x95\x88\xa0\xf4~j\xc5\xcd\
\xf6\x9fL\xe5\x8e\x81[\xab\xe0p\x0bl-$\xb6\xe0\x1dIL\x10Rp\xd2\x93\x08\x9a\
\x9b\xf0\x1b5OHNi\x00\x10\x92B\xb0YY\xf37~A\x99\xe3\x10f\x081\x84h\xbb\xda\
\xed\xbb\x93- hz\xf0\xeb\xb5\x96\x10\x9f\x1e\x9f[\xaei\x00\x18\xba\xb4\x18\t\
q\xc1\xaf\x95\xcb\x14\xc5P\xce \xc4\xee\x84\x89!L\x00\x0c\x84\x08\xedz5`K\
\x85\xf1\xb9\x95R\xc7\x16\x86//5\xc5\xd2\xa3`\xab\x02\xe8\xfc\xde+,\x01\xc4P\
f\x00q\xbb\t\x8e\xe9\xd5\xc4\x8d\xd5\x9f\xbb\xb9D\xc7\xee\x89'\xb56\x90\xa8\
\x0e\xa84t2\x0f\xe5&@\x8dup\xe0A9\x83\xa0 >\xb1?\xd3\x01`\xe21\xad\x13\x80NB\
\x9bQ\x84u\x0f\x147\xe0\xa6\x86\xe1$\x18\x14F\xa0 \x1e\xea\n\x10\xe2a\xa5\
\x1c4KE\xf8^5b\x92\xe7B\xb4\xc1\xe1\xdaM\xb7\xa77\x9d\xca\xe4@a\x9c;\x0cptc\
\xf5{K\x88\x9f\x8c]\xfbqg\xdf\xe8\xf6\x97\x87\x03\xb7\xea\xf1\xfa\x03\x8al\
\x7f\xc7W\x14\x91\xbfZ^\x98\xb8\xbe\xbf?HK\xf7S\xb3\x1f\xee\x1aw\xb7\xff\x03\
\x1aFs\xfe=\xb3\xeav\x00\x00\x00\x00IEND\xaeB`\x82\x9c\xb5 3" )

def getBadgeAddedBitmap():
    return BitmapFromImage(getBadgeAddedImage())

def getBadgeAddedImage():
    stream = cStringIO.StringIO(getBadgeAddedData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getBadgeConflictData():
    return zlib.decompress(
'x\xda\x01u\x02\x8a\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02,IDAT8\x8d\xa5SMH\x94\x01\x10}\xdf\x8f\xab\
\xae\xeb\xdf\x96\xa9\x04\x86\xb6\xa4 \x99\x94\x91k\x1a\xde\xfa1\xa8S?K]\x8bN\
!\x1d;t\xe9 A\x10Zd\x87$*\x84:T\x84`\x89`IDt*\xc8B122s\xdd\x95\xc5T\xf4\xfb\
\x99y\x1dr!p\xad\xc0\x81\x999\xcc\x9b\xc7{\x03c\x90\xc4z\xc2^k0\xfbb\x9fE\
\xe1{\xaa\xa6T\xd9Z\xba\xff\xb5d\xc2\x99k\x11P\xd8\x19(;X\x1b(=\xd0L\xd13kJ \
\xb9*\x13\x83\xcd\xe1\xf8@\xd3Oq\xe7\xe8\xa6F8\xf5t\xf7\xec\xe4\xe3]\xe1L\
\xd8\x8c\nT\xf4nnE,\xdf0M\xd8ya\x04+ca\x8a^\xfe/\x05\xf1\xe7M\xf5\xd3\xfd\
\x8dBq\xe8\xc4\xaf\xd3M\xf4P\xdd$\xbf>\xd8\xe1O\xf4n\xaf\xff\xa7\x02\xaa\xde\
\x0f\xd5\xb4\x9b\xea/\xe0\xf3\xc0C\x8c?\xbb\x03\xf5\xa6QTw\xc1R\xd1\xae\xbf\
\x1e1\xde\x1f\x8de\x15Gk\xf3\xb6\x1c\xc5\xd2\xb7v\x90\x00\t,Ov ?\xd2\x86\xec\
\xb2\x96\xe6\xf1\xdb\xd5\xb1\x8c\x04\xf1\xfehHU;\x83U\xc7\xa1\xfe,\xa0+\xdb$\
T=\xe8\xf2\x18\nkN@E\xaf\x8c\xde\xdc\x1aZE\xa0\xa2=\xc1\x8ac\x1b\xb2\x8b\xab\
\xe0%\x1f\x01 r\x8a\x82icp\xa6o \xb7\xa4\x02\x05\xd5\'7\xfb\xcb\xde\xc5\xf4\
\x9eA\x12?\xfa\xf6D\xa8\xfa\xa9\xfc\xd0\x90-K\xef\xe0\xcd\xdc\x82*`f\xe5`19\
\x8f\xec<\x85e\x11VA+\xac\xfc#\x18\xe9jp\xc5\xf1kw^J\x8e\x9b\x00@\xd1\xde\
\xd0\xb6s6u\x012\xff\x06\xa0\x02 \xbe\x0c\x8fb\xe6\xe3\x14\x00\x02T\xf8\xa9A\
\x18\xe6"J\x1a\xdb\x03\xbe\xe3]\x03\x00\xe3\xfb\x93\x866\xab\xb0\xaeoSK\'\
\xfc\xf9\x97\xf0\x12\xf7~[R\x824\x00\x02\xa6E\x18tA\nLk#r*;\xf0\xa1;\x86\xb9\
\xb1\xe1\xc3\xb6\x8at\x17EN\x01\x00\xecP\x13\xecPt\xc5\x9c\x91\xb6\xbfR\xd2O\
G\xc0\x08\xa0|\xefY\xa4F\x86\xae\xda\x14\x1dJ\xbc:\x7f\x9a\xa2PQ\xfc\xd9\xc5\
\x13\x88\xe3\xc1w<\x88\xe3A\x1c\x1f\xe2\xfa\x10O\xa0\xbe@}yk\xac\xf7\x9d\x7f\
\x01\x94Lc\xd9?z"H\x00\x00\x00\x00IEND\xaeB`\x82$u ,' )

def getBadgeConflictBitmap():
    return BitmapFromImage(getBadgeConflictImage())

def getBadgeConflictImage():
    stream = cStringIO.StringIO(getBadgeConflictData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getBadgeMergeData():
    return zlib.decompress(
"x\xda\x01<\x02\xc3\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xf3IDAT8\x8d\xcd\x92\xcfK\xd3q\x1c\xc6\
\x9f\xcf\xd7\x89\xb6\xa6\x82:\xbfku\xf623\xa4\x93\x11DEeP\x90\x83\x0e\xce\
\xba\xb4\xa0\xf2\xd0\xc9\xfe\x8bJ\xea\x94\x11x(\xd0\x08\xb6R#\t\x02oK\xba\
\xd4A\x84.\x1a\xee\xbb\xcd,l\xd3\x96\xfb\xf1y\x9enbl \xd1\xa5\xe7\xfc<\xaf\
\xf7\xc3\x9b\xc7H\xc2\x9d\xf7\xb7f$\xf5K\x8a\xdc;6\xbe\x86=\x14\x9f\x89%h\
\xe5\x9f\xb849`FS7\xe7\xdc\xa6\x03\xe7\x1aM#\xbel-\x17(u\x8b\xca=8\xf1\xc4\
\xec\x0e\xddxsU\xe3\xe7\x9f\x9a\xf8t,\xe1\xfaC\x83$\xe1\xe5\xbdY\x9f\xa4\xa2\
$\xb8\xcd!T\xadm\xcd\x163\xb9\x12K5Wi\x89\xf8tL]~\x17\x07\x03\x87\x90\xd9\
\xcc\x80d\xbfs\xb7\xffQ4S\xf4\x92+[+\x08\x98\xfd\xe8i\xeb\x85\xc8\x1a\x80\
\xa5\xd0\xd7u\x14-\xbe\x16x\x05\x0f\xcb\xdf\x97\x0b\xd62\xe2\x00\xc0\xd8\xf1\
\xc7\xd1\xccO\x0fM\xbe}02\xa0U\xdd\x06\x12\xd0\xec\xf3\xc3\xcb{ \xd9=\x15K\
\xae\xf9\x00\xe0\xf6|\\\xa2\xf0\xe1\xeb\x02HB\xac\x0fXXM\x81\x14h\t\x929\x00\
\xc6H\xb5\xe6\xbf\x91\xf3O\xe9\xff\x02\xe0\x03\x80\xeb\xb3\xc3\xda\xf5\x1c\
\x90\xc2\xb3\xcb/\xfe\x18Rt\xe2\x82\xb4\xe3\x11H\xe2\xf5\xc8[\xe3\x00\x00-C\
\rj@\xa4\xe30z\x83}\xa0\xad\xdd\x01\xad\xd0\x1b>\x82H\xb8g'\x0c\x00\xce\xb5W\
C.\xa9\xcf\x1d\xcdA\xe4\x7f\xfd@\xa5Z\xae\x0f Q\xb2el\x147\xd0\x19\x08b\xe0\
\xe1\xe9\x04\x008\xb4\\\x0c\xf9\xc3\xad\xedM\xed\xd8,m\xe1S\xf6#Xg\x89\xb4\
\xc4Rz\t\xe5J\x15n\x9b\x8b\xce\x96\xe0\xe0\x99\xfb'\x13\x8e%S\xdb\x95m\xa4\
\x0bi\xe46\xb3\xc9\xa9\xe1\xa4\xb1u\x1b\x08\xe5J)\x94\xfe\xb6ZX\xcf\xafC\x14\
(\xf9\x8d$\x0cMF\xe7hY|~\xe5et\xaf\xaf\x9f\x1d;\xe5RZ\x14\x95z7:\x7f\xf17\
\x9a\x067\xba@m~\x86\x00\x00\x00\x00IEND\xaeB`\x82c\xbf\n\x1d" )

def getBadgeMergeBitmap():
    return BitmapFromImage(getBadgeMergeImage())

def getBadgeMergeImage():
    stream = cStringIO.StringIO(getBadgeMergeData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getBadgeModifiedData():
    return zlib.decompress(
'x\xda\x01\xe1\x01\x1e\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x01\x98IDAT8\x8d\xa5\xd2\xbdK[Q\x18\x80\
\xf1\xe7\x9c\\\xee\xd5`T\xa8\x8d\x9aBM\x16\x15D\x10.\x88\x95"(8\xa8\xe0R(\
\xed\xd4\xc5Y\x1c\x04\x1d\xfc\x07\xeaT\xa5\xa58\t.\xe2\xa0\x88 \xa2v\x10\x94\
(\x88\x11\xfc\x18\xb4V+\xe4j\xabA\xa3i\xfd\x8a\xb9\xa7K{\xa1\xc4\xe8\x05\xcf\
\xfc\xfe\x1e\xdes8B)\xc5c\x8e\xe6v\xd0\x9a\xad\xca\xbe\x8c\x07\xf7O\x7f\x8a\
\'v\xca\x96^\xdf\xfe\xf7\x1cC\xafu\x1d\xf8}\x12\xbaP\xa9\x00\x95\xad\xef\x10\
R\xb26\xd1\x15\x8c[\xa7\x9f\x84\x9b+X\xb3U*?\xd0\x8d\xe6{\x8e\x90\x06\x00\
\xf6\xd5\x19k\x93\xfd\xb6t\x83\x0b\xcc\x8fh\xb9\x02ke\x98dl\x8bdl\x0b\x00\
\xe9\xd1n\xee\xdd\xc0\xc1F\x9ckk\x12\xfb\xc2\xe0[\xe4\x08_n\x80\xd8\xc1\x0e\
\xd5\xed\xe3"\xe3\x06\xff\xe1\x1f\xa3\xa8\xd4\x0eFI\t\xfeB\x8d\xdb\xe8\x12\
\xd5\xed\xe3\x02\xe0\xce@\x1a\xbe\x89\xa2\x175\x13\x0b\xaf\x92\xf8\xbaKi\xc7\
\x82\xf87\x9b\x16\x98\xeb+w\x8d\xd3\x023\xbde\xca|\xfd\xd95\x06\x10J)\x06\
\xdaB\xc1P\xa9\xbeW\xde\xd0\xcb\xe1\xee\x14\x95\xe6\xb5+\x0c\x7f\x7fb\xd2k\
\xef\xbdx3D\x96\x9e\xcd\xc6\xc4\n\x91x\x8a\xe2\x8a\x97$\xc2_\xb8:<\xa2\xa6g\
\xf9N\xec\x04\x00\x0c\xe9\xe1|\xfe\x03\xe6\xb3\x1c\xb6#\x9bD\x16G\xf0\xfa\
\xfd\xb4\xbc_\xcf\x88\x9d@x\xf3\x17\xf5\xd3\xfd\x84\xcc&.\xf1\xa0\x12\x83x\
\x8f\xa3\x0fb\xe7\r\xde\xd6\x17(]J\xea\xca\xf2)\xf2\x19\xe8O\xf3\xc6\x1a;\
\x17^=\x84\x9d\xc0c\xce\x1f\xfa=\xcc\x11\xc7\xcf\r\x10\x00\x00\x00\x00IEND\
\xaeB`\x82\xc7.\xdf2' )

def getBadgeModifiedBitmap():
    return BitmapFromImage(getBadgeModifiedImage())

def getBadgeModifiedImage():
    stream = cStringIO.StringIO(getBadgeModifiedData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getBadgeUptodateData():
    return zlib.decompress(
'x\xda\x01\x05\x03\xfa\xfc\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\
\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\
\x08\x08\x08\x08|\x08d\x88\x00\x00\x02\xbcIDAT8\x8d\xa5\x93Mh\x94W\x14\x86\
\x9f\xfb\xe5\x07ct4?\x95q\xbeL\xab\t\x12\x90\x88ZK\xc0\xa4\x1a\x83\xb5()T\
\x1aP\x10cP7BqQ\xe8\xd6\x8d\xa5\xd0"\xb6\xd4\x80\x82tQ5F\\d!\xb5.\x94"%\xa4\
\x98\xa44C4I\xd5:I\xcd\xfc\x91i\xcbD\x9d\x8cw\xbe{\xcf\xed\xa2\x98\xfaC7\xed\
\xbb<\x1c\x1e\x0e\xe7}_\xe5\x9c\xe3\xff\xa8\xf4\xe5\xc1\xe1\xe1\xf6\x06c\x82\
}\xd6\xca\x01\x1d<\r\x8b\x18\x10\xc9 \x9c7\xd6\xf6]\xe9\x98|\xf0\xfc\xbez\
\xfe\x82\x83\xb7\xb6v\xea@\xf7\xf84\xac\\\xff\xda\x16*\xcb\x96\x01\xf0\xb8\
\x98ch\xe6\x06\xbf<\x1aM#\x1c\xfd~\xcft\xff+\x80\xee\x1f\xdf\xee,\x04\xfa\\k\
\xa8\xa3\xb2\xb1f\x03\xa9\xc2\x0c\xa9\xf9$\x00\x91\xc5>\xe1\x8a:&\xd2\xc3\\\
\x1a\xbf\x98/\x85\xee\xa1C\x0f\xfb\x17\x00]\x03-\xf5\xda\x04\x03\xad\xcb;"kj\
\xd63\x98\xbd\x89\x11\x8b\x11\xc1\x03\x14P\xaaJh]\xd1\xcexr\x98\xde\xb1\xbe\
\x14\xc2\x96\xb1\x0fg\xe2\x1e\x805\xc1~_5D\x1ak60\x98\xbd\xc9S\x13P\xb4\x01\
\xc6\x06\x14M\x11c\x02vD:\x18\xce\x0c\xd0\xe47\xb3\xb1\xa6)\xa2\x03\xf6\x03x\
\x00\x81\xd5]\x1b\xc3[I\xcc?\xc4X\x83\x15\x83X\x83\x12A\x89\xe3\xfdU{h\xaf\
\xdb\xc5\x91u\x1f\x93x4E\xdb\x9a\xed\x145]\x0b\x80\x82\xd6\xfe\xf2\xf2j\x92\
\xf9\xdf\xb0b\xd9\xe9\xbf\xc7\x91\xb5\x1f\xa1\xc4c\xf7\xea\xbd\xb4\xf9\xefb\
\xc5\xf0\xed\xaf\x97I\xe6\xe2TU\xac@\n\xce_\xb0\xb1\xa05\xe2\x1cN\x84\xa5%Ki\
\to#T\xbe\x8cc\xcd\x9fQ\xbd\xa8\x16+\x86\xb3\xb1\x93\xdc\xff\xfd6K\xca\x96\
\xa0p\x10\xfc\xed\x82\x07\x80!\x99\x9b\xcf\xe2/\x8e\xf2D\xcfq:\xf69\xf9\xe01\
\xd5\x8bj\x11\'\x9c\xfd\xf9\x04\x93\xb3\xa3( \x12z\x9dl.\x8d\x12\x92\xff\xfc\
 p\x17\x06\xe37\x88TD)\x13\x98\xcd\xa7\xf8j\xe4\x13\xee\xfd1\xce\xd7\xa3\'\
\x99\xc8\xc6P\xa2\xf0D\x11\r\xad\xe6\xea\x9d\xeb\xe0\xb8\xb0\x00\xd0\x05\xd7\
;\x92\x8a\xa5n\'o\xb19\xf2\x0e\xe5\xa2\xf83\x9f\xe6\xccO\x9f2\x91\x19\xa5\
\xc4y\x94{%\xb4\xd5\xefb$>@l\xe2n\x8a"\xbd/\x04\xa9\xe9T\xb43\xaf\xdd\xb9\
\xc3o}P\xf9f\xb4\x95\x99\xb9)\x92\xb9)\x9c\x08uU\xf5\xd4\x85\xde`(\xfe\x03\
\xdf|w5\xef\x95\xa9\xee\xe9/\x12\xfd/\x00\x00\xeaOD;E\xbb\x9eM\xd1\xc6\x95;\
\xd7\xee\xa0\xaa\xa2\x16\x1cd\xf3\x19\xae\xc5\xae36\xf9 \xad<ut\xfa\xcb\xc4\
\xabQ~\xa6U\xc7\xa3\rX\xb7\x0f\xc3\x01\xa7]\x18\x0bJ\xa9\x0cp\x9e\x80\xbe\
\xe9\x9e\xc4\xbf\x97\xe9\xbf\xe8/\xb9u^\x16\xf8\xe2N\x07\x00\x00\x00\x00IEND\
\xaeB`\x82~\xacq~' )

def getBadgeUptodateBitmap():
    return BitmapFromImage(getBadgeUptodateImage())

def getBadgeUptodateImage():
    stream = cStringIO.StringIO(getBadgeUptodateData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getBlankData():
    return zlib.decompress(
'x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2\x02 \xcc\xc1\
\x06$\xe5?\xffO\x04R,\xc5N\x9e!\x1c@P\xc3\x91\xd2\x01\xe4\xcbx\xba8\x86X\xf4\
&\xa7\xa4$\xa5-`1\x08\\R}\xa5!\x90\xd9\x8dW\xc2\x05\xa8)6\x89A\xad\xfd\xea\
\xa4\xd7@u\x0c\x9e\xae~.\xeb\x9c\x12\x9a\x00\xf2\xb8\x17\xab' )

def getBlankBitmap():
    return BitmapFromImage(getBlankImage())

def getBlankImage():
    stream = cStringIO.StringIO(getBlankData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getFileData():
    return zlib.decompress(
'x\xda\x01\x90\x01o\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01GIDAT8\x8d\x8d\x93Mn\xc20\x10\x85\xdf\xd8\
\x88=\x1b\xbai%\xeeP\xb5=\'\x12,8R\xd5[\xb4\x0bD6\x04\x11\xe2D\x99\xf1\xeb"q\
\x9aP\xfeF\xb2\xe4\xbf\xf7\xf9\xcd\xd8\x16\x92\x10\x91g\x00O\x00<nG\x06\xe0\
\x9bd\xecgH\x02\xc0kUUy\xd34\xa6\xaa\xbc\xd4\xaa\xaa\xe2j\xb5Z\x02X\x00p$[m\
\x07xo\x9a\xc6\x8a\xa2\xe0\xe9t\xea\xdb\xe1p\xe0~\xbf\xe7n\xb7\xa3\xaar\xbb\
\xddr\xbd^\x8f \x00 \x00\xdeU\x95!\x04\xd6u\xcd\x10\x02C\x08<\x1e\x8f\xcc\
\xf3\x9cY\x96QUY\x96%\x8b\xa2\xe0f\xb3Y\x02X\x90\x84t\x807U\xfd4\xb3>\xb5\
\x18#HBUQ\xd75f\xb3\xd9\xa8\x18\x93\xc9\xe4\x03\xc0\xd7d8\xe9\x9c\x83\x88\
\xf4}3\x83\xf7\x1e\xd3\xe9\x14y\x9e#\xc6\x08U\xc5|>\xff\x03\r\x01I\x9c\xfa\
\xde\xfb\xd18\x01GNn\xdd\xd9\x10""\x10\x91T\xf4\xc7\x00I8L\xed<\xdc=@\x82\
\x00\x80\xf7\x1e\xce\x8d%W\x1d\x0c\xadv\xaf\x151\xc6\x7f\xfb\xee\xa60\x04\
\x9d\x9f~\x13\x90\nv-\xf7K\x00\xa2}T#\xc8\x95\x88\x9d;:\xb6\x1e\xa3\x99\x85\
\xb4p\'\xa2\x99\x95\x00\x0c\x00\xa4\xb3\xf9\x82\xf6;?t+\x9d8#\xf9\xf3\x0b\
\x87\x97\xeb\x93\x8c\xc6X0\x00\x00\x00\x00IEND\xaeB`\x82\xa9\xec\xa7\xf8' )

def getFileBitmap():
    return BitmapFromImage(getFileImage())

def getFileImage():
    stream = cStringIO.StringIO(getFileData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getMinusData():
    return zlib.decompress(
"x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2< \xcc\xc1\x06$\
\xc3Jc\x9e\x03)\x96b'\xcf\x10\x0e \xa8\xe1H\xe9\x00\xf2\x9d<]\x1cC4&&\xa7\
\xa4$\xa5)\xb0\x1aL\\RU\x90\x95\xe0\xf8,\xc6\xaa\xf0\xcf\xffr\x13\xd69\x87\
\xb8x\xaaVM\xea\x890\xf512N\x9e\xb1v\xf5\xe9\x05\xdc\xc2;jf:\x96\xdf\xd2\x14\
a\x96pO\xda\xc0\xc4\xa0\xf4\x8a\xab\xcau\xe2|\x1d\xa0i\x0c\x9e\xae~.\xeb\x9c\
\x12\x9a\x00Ij($" )

def getMinusBitmap():
    return BitmapFromImage(getMinusImage())

def getMinusImage():
    stream = cStringIO.StringIO(getMinusData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getPlusData():
    return zlib.decompress(
"x\xda\xeb\x0c\xf0s\xe7\xe5\x92\xe2b``\xe0\xf5\xf4p\t\x02\xd2< \xcc\xc1\x06$\
\xc3Jc\x9e\x03)\x96b'\xcf\x10\x0e \xa8\xe1H\xe9\x00\xf2Wy\xba8\x86hLL\xfe\
\xf3\xff\xbf=\xb3fC\xa7\xca\xd5\x17R\x12\x92\x92\x92@li\x1e\xe2\xf2\xff\xfd\
\x8d\xaa\xf7\xf6\xca\xca\xca\x81f\x1bl\xefo\xebI\xbc\xf9t\xfb\x11\xebN\xdf\
\x19\x8d\x8e3\xe6\x8b\xaefs\x9b\xb1|\xbd\x8c\xed\xaf\xff\xca\xcc\xd2\xcc\xe6\
\xb7\xd9\xdb~\x9e\xcc\xe3\x99\xac\xb3\xccp\xce)\xa3\xc4\x1f_\xbf\x8a3o\xef\
\x90jn\xdc\xa5q\xa4\xf6\xff\xff\xff\xe9?\x80\x964\xcb3\x1f\xaeg\x93\xb9\xb1\
\xf0\xff\x95\xfa\x19V;\xd8\x96<x:\xff\xd9\x81\x0f\xf1\xdb\x81\xfc\x14\xe6D\
\x89\xd5\xf2\xfb\xfe'&<\xf8\xff\xb1\x95\xc5\xdf\xd8\xc0\xe0\xc3F\xc1\x0f&\
\x1b\x1b\x9e\xcc`cx#\x16|+?\x897\x0c\xe8j\x06OW?\x97uN\tM\x00]\x97b`" )

def getPlusBitmap():
    return BitmapFromImage(getPlusImage())

def getPlusImage():
    stream = cStringIO.StringIO(getPlusData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getProjectAddData():
    return zlib.decompress(
'x\xda\x01B\x02\xbd\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xf9IDAT8\x8d\xa5\x93MH\x94a\x14\x85\x9fw\
\x1ak\xc0~\xa0\x85\x96\t\x95"\x14\x9211\x8b\xc1\x86\x88\xc2hSQ\x0b\xf7A\xb8H\
\x07\t\x17\t\xb5\xab\x85A?(\x19d\x8b\xa0\x9d\x05\x15\xd1*\x846".b$\xc9F(P!\
\xbfI\x17\xe3X\xe3(~\xde{[|\x938P\xe4\xd0]\x9f\xfb\x9c{\xce\xcb\xeb\xcc\x8c\
\xff\x19w\xf1\xda`{\xe2d\xecN\xb6`\x95f\x80*\xa6\x8a\xa8`j\xa8)&\x82\x9aa"\
\x88*;\xb7\xfaK\xe9\xf4\xec\xf5\x97\xf7[\xfb\xc3\xb1\xe3\xb1\xbe\x8aHe\xa8:R\
\x96q\xe5RA\xfa\x80\xfep\xc1\xb7P!\x9b/\xfb\xf4e\xdfB\x00a\x13\xe3\xe6\xa5}e\
\x03\x92\xbd3\x04\x00S\xcc\x8c\xa0J\x03\x03\x9cc,\x95\xfa\xeb\xf2\xb1h\x14Q\
\t\x00\x98!"\xb4\xf5N\xaf\x0b\x9et\x1e\x00 \x91H\xfc\x11\x90\xcf\xe7\xd1\xb5\
"@4h\xf8qr?8\x03s\xe8?\x9eVUQ\xd1b\x045T\x14\xe7\xc0\xb4\x18\xc3\x19\x8d\x8d\
\x8d\xe4r\x0b\x94\xb2\x1c`8@\x7fGP\x15T\x05\xdb \xc1 =\x99.qM\xcf}`r>E~\xe5\
\x07\xab\xfe*\xcbr\x088Gx\xcd\xf7\x11\x11:\x07\xe6\xd6\xc5\xbdm\xd5%\x1d\xbc\
\x1d\x1d$c\xe3\x9c:\x11\xa7vw\x03\xef\'^3\xfai\x88xG\xcd\xdd\xb0\x89\xa2\xaa\
<\xb8R\x15X\x173n\x9cW\xc3\xcf\xb8p\xf6\x0c\x12\x12\x8e\xeema\xe8\xf3\x0b\
\xe2G\x9a\x99\xfe\xfa\xa6=\xa4\xaa\xa8Z\x10C\x03\x98\xaaRWW\x8f\xe7yx^\x86\
\xf9\\\x86\n\xb7\x9d\xf3\x87\x93\x00t\x9d\x1e\xa0\xbe\xaa\t \x12\x9e\x9d\x9a\
y~k\xd0oU\x11T\x14\x11AU\x11\xdf\x0f`fd\x17\x17\x98\xf0F\xf8\xe8\r\xd3\xdd\
\xf2\x94\x9ew\x97\x89l\xd9\x06\xb0\xe26\xf3\x1b\xe3\x1d5\xb7k\x0f\xee\xba\
\xd1\xdc\x94\xa0aO\x94/\xdf\xc7\x18\x19\x1f\xe6\xdb\xd4\xe2\xbdM\x01\x8a\x90\
\x1e\xe0*\xb0\x03\xf8\t<\x1a}\xe8u\xff\x02"\xdb!\x1aJ8?)\x00\x00\x00\x00IEND\
\xaeB`\x82e(\xfb\xa6' )

def getProjectAddBitmap():
    return BitmapFromImage(getProjectAddImage())

def getProjectAddImage():
    stream = cStringIO.StringIO(getProjectAddData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getProjectDeleteData():
    return zlib.decompress(
'x\xda\x01>\x02\xc1\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xf5IDAT8\x8d\xa5\x93\xcdKTQ\x18\xc6\x7fg\
\xee\xd5\xa6.}\x11\xa5!5j\xb4\x9a6\xc6\xec\x9aED\x10\x04-j!C\xeb\xb00\x06\
\xb1MA\x11B\x11\xb4I\x14D\xaa\xbf\xc0\x08\x17\x03m\xacE\xf4\x01\xd1b\x8a6S\
\x8bP\xc3\x19\x94@%\xc7;\xd5\x9d\xf7}[\xdcI\x1c(Rz\xd6\xcf\xf9=\xe7y\x0e\xc7\
\x99\x19\xff#wvp\xe2r\xf6x\xe6\xeebh\x81\x19\xa0\x8a\xa9"*\x98\x1aj\x8a\x89\
\xa0f\x98\x08\xa2\xca\x8e\xd6h\xb5T*_\x9d\xbc\xd7;\xe6g\x8eeF[\x92A\xa2-\xb9\
\xa9\xe0`5\x94Q`\xcc\x0f#K\x84\x8b\xd5M_\xbd\x16Y\x02\xc071n\x9c\xeb\xd84 ?2\
K\x0c0\xc5\xcc\x88\xa740\xc09\xde\x15\x8b\x7f=|\xb4\xa7\x07Q\x89\x01\x98!"\
\xf4\x8d\xcc\xac\x19\x1e\x0et\x02\x90\xcdf\xff\x08\xa8V\xabh\xbd\x01\x10\x8d\
\x17\xbe\x9fO\x8130\x87\xfe\xe3iU\x15\x15mTPCEq\x0eL\x1b5\x9c\x91N\xa7Y^^\
\xa2\x99\xe5\x00\xc3\x01\xfa\xbb\x82\xaa\xa0*\xd8:\x0b\x06\xa5\x8f\xa5\xe6\
\xd8b\x01y;I}\xfe\x0b\xde\xdev\x8el=\x01\x9c\xc1\xafG\x11"\xc2\xc0\x83\x855\
\xefH_[\xd3\x06s\x85q\x96\xcao8|\xbe\x9f-]ij\x1f\xa6\x08^>\xe3\xe9\xc9\x96\
\xbco\xa2\xa8*\xc3\x17\xf6\xc5\xd1\x8d\x8e\xeb5\xfdx\x98L\xee\x12\xc9\xcf\
\xcf\xe1\xc5m\xb6\xed\xdcEW*E\xf1\x93\r\xfa\xaa\x8a\xaa\x01\xdah\x18\xab\xbb\
\xfb\x10\x95J\x05p\xfc\xac\xcc\x90l\xef\x82\xd3W\xd6\xa0\xfe\xd0~<u\x9d~yz\
\xf6\xd1\xad\x89\xa8WEPQD\x04UE\xa2(^\xdb\x8c\xde\xe4n\xc2\xf7O\x08\n\xfd\
\xfc\xa8\xcd\x13\x02+\xdf<\xc4\xa3\xe26\xf2\x1b_\xe5:\x86Z\xb7\x07\xd7\x0f\
\xec\xa9\xfb~b\x8e\x95\xafuf\x16<\x89\xbe\xdb\xcd\r\x01\x00^\xe7\x0e^[]\xac\
\\\xf4\xc4\xa5\xc4\xb3\xb2\xc1\xf8\xa9\xa9\xfa\x9d_.\xcc\x16\r0\x0bMg\x00\
\x00\x00\x00IEND\xaeB`\x82b\xfd\xff\xad' )

def getProjectDeleteBitmap():
    return BitmapFromImage(getProjectDeleteImage())

def getProjectDeleteImage():
    stream = cStringIO.StringIO(getProjectDeleteData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScAddData():
    return zlib.decompress(
'x\xda\x012\x02\xcd\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xe9IDAT8\x8d\x8d\x93\xc1k\x13Q\x10\x87\
\xbf\xd9\xdd\x86"\x1e\x8c`\xa4P\xa1 \x8a\x1el\x05i+*(\x88WO\x82\xe0\xadE\x10\
\x0c\x9e\xfc\'z-$B=\x14<x\xe9\xc9"z\xd0B\x11J\xb5\x14\xa5Vz\x11\xbc(\x18\x93\
K6d\x93\xdd\xb0\xef\xedxH6nJ\xd3:00o`\xbe\x99\xdf<FT\x15\x11\x19\x07N\x03.\
\x87[\r\xf8\xa9\xaaI?\xa3\xaa\x00W\xa2(\xf2\xe38\xb6\xc6\x18=\xc8\xa3(\xd2R\
\xa9\xb4\x08L\x00\x8e\xaavk{\x80\x998\x8em\x10\x04\xdaj\xb5\xfa\xdeh4\xb4^\
\xafk\xb5ZUc\x8cV*\x15-\x97\xcb\x03\x10\x00\x01f\x8c1\x1a\x86\xa1v:\x1d\r\
\xc3P\xc30\xd4f\xb3\xa9\xbe\xefk\xadVSc\x8c\xb6\xdbm\r\x82@\x97\x96\x96\x16\
\x81\tUEz\x80ic\xcc\x96\xb5\xb6/-I\x12T\x15c\x0c\x9dN\x87|>?\xb0\x0c\xcf\xf3\
f\x81m/\x9bt\x1c\x07\x11\xe9\xc7\xd6Z\\\xd7%\x97\xcb\xe1\xfb>I\x92`\x8c\xa1P\
(\xfc\x03e\x01iq\x1a\xbb\xae;\xf0N\x81\x03\x93\x1c\xf6gY\x88\x88 "\xe9\xd2\
\xff\x0f\x90\x16f\xa5\xed\xb7#\x01)d\xed\xcb*\xeb_\xdf\xd0h\xd5\x89M\xcc\x8d\
\xf9\xf3\xf3\x1b\xcb\xdf\xb7\x87\x02\xb2\xa3\xbe\xddZa\xa7\xb2\xc6\xcd\xeb\
\xd3\x8c\x9f<\xc7\xfa\xde+\xda#\xbf\x1e\xcd\x16\xc7\x02\xe7\xa8\xee\xaa\xca\
\xea\xc7\x97\\\xbe0\x85u,Scw\xb0\x12s\xf5\xd25\x80\xe2P@\xaaYD\xa8\xf9\x15F\
\xe48w/>\x01\xe0\xe9\xed\xe7\x9c-L\x02\x8cf\x01z\x10DDh\xb6\x1b\xec\xfd\xded\
\xe1\xfd\x1c\x00\x0b\xef\xe6\xf8Q\xdb\x05\x88\x1c\xed\x8aM\xac\xb5!\x90\xec\
\x87\x00\xdc\xbf\xf5\x90O\xbb\x9b\xe4\xf0x\xfd\xed\x199\xf1\xd8\xd8\xf9\x00P\
\x96\xde9\x9f\xa1{\xceC%M>8U\x1c=\xe1\xdd\x13\xe1\x98*m\x13&/>/\xffy\xfc\x17\
\x1b\xdd\x19KUM|C\x00\x00\x00\x00IEND\xaeB`\x82W\x1a\xf4\xed' )

def getScAddBitmap():
    return BitmapFromImage(getScAddImage())

def getScAddImage():
    stream = cStringIO.StringIO(getScAddData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScCommitData():
    return zlib.decompress(
'x\xda\x01[\x02\xa4\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02\x12IDAT8\x8d}\x93\xcfKTQ\x14\xc7?\xef\xbd\
A\x8a$\x98\x12\x95\xd40\xa9\x85E\x10L\x8dA\xb8(\xa9U\x8b\xfa\x0b\\\x17\xed\
\x82V\xd1\xba\xa0\x8d\xa0\x90K\x97\xeeZ\x04\xed\na$D0\x12Z\xb9\x08\x9drp2\
\xe6M\xf3\xde\xbc_\xe7\xde\xd3Bg\x9a\x01g\x0e\x1c8\xf7p\xcf\xe7p\xee\xb9_GUq\
\x1cg\x1c\x18\x01<\xfa[\x15\xd8SU\xdb\xce\xa8*@!\x8ec?\xcb2#"z\x92\xc7q\xac\
\x8b\x8b\x8b\x0b\xc0$\xe0\xaa\xeaQ\xed1\xa0\x98e\x99\t\x82@\xc30l{\xbd^\xd7Z\
\xad\xa6\x07\x07\x07*"Z\xa9Ttii\xa9\x0b\x02\xe0\x00E\x11\xd1(\x8a4I\x12\x8d\
\xa2H\xa3(\xd2F\xa3\xa1\xbe\xefk\xb5ZU\x11\xd1f\xb3\xa9A\x10\xe8\xf2\xf2\xf2\
\x020\xa9\xaa8\xc7\x80["\xb2a\x8ci\x8ff\xadEU\x11\x11\x92$!\x9f\xcfw=F.\x97\
\x9b\x016s\x9dI\xd7uq\x1c\xa7\x1d\x1bc\xf0<\x8f\x81\x81\x01|\xdf\xc7Z\x8b\
\x880<<\xfc\x1f\xd4\th\x15\xb7b\xcf\xf3\xba\xce-`W\xd3~;kA<\xcf\xe3\xd5\x87\
\x87\xbcx\x7f\x0f\\\xdbu\xa7/\xa0\x05q]\x97\xc4d\x8c\x0fM\xf3tu\x96T\xe2\x93\
G\xe8\xb4\xe7\xabwQ\x15R+\xa4"\\\xc8_fzt\x86F\x1c\xf2\xe8\xdd\x15\x06\xc7\
\xbc\xd3\xc1/\xd3\x1b 6\xe5\xfe\xb5y\x8cZ\x8c5X\x94\xfdz\x99\xeb\xe3w\x08\
\xd2\x88\xda\xb3\xb5Oa`\xcf\xf7\x04\xc4\x92b\xd4\xb2\xfbg\x87\xcc\nb32\x93\
\xf17ipcb\x96 k\xba\x1b?J\x87}\x001b\x84\x91\xb3\x17\x11k0j\xa9\xd4\xf7878\
\xcaVy\x9d\xd2N\xa9\x96\ns\x9d\x00\xe5\xe8S\x01\x10I\xc2\xca\x97\xb7\xa46%\
\x96\x94\xa9\xa1\xab\xdc\x9ez\xc0\xe6n\x89\xed\xfdm\x0e?\xf3\xa4\xb1\xae_[Z\
\xb8\x99$I("=\xc5Tx}F\xe7W\xe6\xb4\xf8fL\xbf\xff\xfc\x16\x02\x05U\xc59\x96\
\xf3\x04Gr\xee\xb9\xd6K/Y3\xea\x9d\xfa\xfd\xd1<\x8e\xb6(\x03UU-\xff\x03\xd2%\
y\x8a\x9c.E_\x00\x00\x00\x00IEND\xaeB`\x82\xcd#\n\x1b' )

def getScCommitBitmap():
    return BitmapFromImage(getScCommitImage())

def getScCommitImage():
    stream = cStringIO.StringIO(getScCommitData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScDiffData():
    return zlib.decompress(
'x\xda\x01\x9f\x01`\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01VIDAT8\x8d\x85\x91\xb1n\xc20\x10\x86\xbfs,\
\xd8\x18\x18\xda\xadb\xee^\xfa>\x88\x81\xa9\xafRUb`\xea\xb3\xf0\x12\xecm\'\
\x14$\x10P\x854\xbe\xf4:\x94\xa4N\x88\xcaI\x96-\xfb\xee\xf3\xfd\xff\tp\x07\
\xdc\x02\xc2e\xa4\xc0\x87\x99}w\xbc\xd5\xf1P\x14\xc5\x97\xaaZ\xbc\xf2<\xb7\
\xf9|\xfe\x02\x8c\x00gft-\x80\xb1\xaa\xda\xe9t\xb2\xe3\xf1h\xbb\xdd\xce\xd24\
5U\xb5,\xcbl\xb1X\xbc\x00\xa3\xab\x80<\xcf-\xcb2;\x1c\x0e\xb6\xd9l\xeaNB\x08\
\x06<\x02\xee,Sb\x80\xaft$IR\xef\xfd~\x9f\xd5j\xc5z\xbdf0\x18\x00\xdc\x9f\
\xd3\x0c@D\x1a\xde\x8c\xe3\xdf\xaaN\x96\xcb\xa5\x15Ea\xd7\xbc\xa9;8\x93\xebN\
\x9cs8\xe7\x08!\xa0\xaa\xa8*!\x04\x86\xc3!\x93\xc9\xe4\xc9{\xcfl6{v\xed\x91\
\x88\x08"\x82s\xae\x01M\x92\x04\x91\xdfI\xf7z=\xa6\xd3\xe9\x13ps\x01\x88!\
\x95\'\xce\xb9\xda\x9b\xfd~\xcfv\xbb\xads\x1b\x12\xaa\xb1T\x90\xb6\xac\n\xac\
\xaa\xdd\x80\xaa\xa8\xeb\x1cK\x88\xdf<\x90z\xef\x1f\xdb*\x80{U}m\xcb\x8aA\
\x00\xde\xcc\xdeD\xe4\xbd\x03p\x11\xb1/\r\t\x16\x8b\xffK\xac\xef\xba\xbci\
\x00\xaeE\xbb\x08\xa0,\xcbO\xa0\x94\xd6\xe7q\xd1\x08\xb8\xf9\x87[\x02\xe9\
\x0fL\x96\x01V;\x00\x0ec\x00\x00\x00\x00IEND\xaeB`\x82.i\xb9\x7f' )

def getScDiffBitmap():
    return BitmapFromImage(getScDiffImage())

def getScDiffImage():
    stream = cStringIO.StringIO(getScDiffData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScHistoryData():
    return zlib.decompress(
'x\xda\x01\x9d\x01b\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01TIDAT8\x8d\x95\x93\xb1j\x02A\x10\x86\xbf\
\xb9]\xb4\x14,\xb4\x0bI\x9b\xc6*\xe6}\xc4\xe2*_%\x88\x16W\xa5T\xf2\x1c\x82\
\x902O`\x92Fb!\x08\x01\xcd\xed\x98I\x11ON\xb3\xc6da\xd8\x85\xd9\xfd\xffofw\
\x05\xb8\x00\x9a\x80\xf0s,\x80W3\xfb\x8c\xe4\xf6\xe3&\xcf\xf3\x0fU\xb5"B\x08\
\xb6^\xafm0\x18\xf4\x81+\xc0\x99\x19\xb1\x10\xa0\xad\xaa\x8f!\x04f\xb3\x19\
\xf3\xf9\x9c\x10\x02\xb5Z\x8d\x10\x02\xa3\xd1\xe8!\xcb\xb21\xf0t\x8a\xa6\xad\
\xaa\xb6\xd9ll2\x99X\x9e\xe7\xf6\x1f\x1a_\xa8$I\xb2\x9fc4\xadV\xab\x97\xa6i3\
\xcb\xb2\xb1\x88\x1c\xd0\xb4\x0b\xa7\xe9tj\xbf\xd1\x14\xb9\xe1p\xd8\x07.\x81\
\xc4\x97k\x11\x91(\x8d\xaa\xa2\xaa\x84\x10\xa8\xd7\xebt:\x9d\x9e\xf7\x9e4M\
\xef\x92\xd8\xb5\x88\x08\xce\xb9\x83\xb5snoP\xa9T\xe8v\xbb=\xa0\x11\x15(\xd3\
8\xe7H\x92\x04\xe7\x1c\xd5j\x95\xd5j\xc5r\xb9\xdc\xef;(\xc1\xcc\xce\xd2\x88\
\x08\xaa\x1a\x17(\\O\x89\x14\xf9\xf2>\x0f,\xbc\xf7\xb7|?\xe5kU\xbd\x8f\xd1\
\x14\xeee!\x00of\xcf"\xf2\xc2\xd1_\x88\xd1\x94\xfbrP\x82}\xdb\x99\x88\xbc\
\x9d\xa39\x16>n\xe2\x9fi\xb6\xdb\xed;\xb0\x95X\xe7w\x87.\x81F4\xb9\xd3\x00\
\x16_\xaa\x81\t\xdb\x86\xc4\x8b\xf6\x00\x00\x00\x00IEND\xaeB`\x82\t\x0f\xb9\
\x88' )

def getScHistoryBitmap():
    return BitmapFromImage(getScHistoryImage())

def getScHistoryImage():
    stream = cStringIO.StringIO(getScHistoryData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScRemoveData():
    return zlib.decompress(
'x\xda\x016\x02\xc9\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01\xedIDAT8\x8d\x8d\x93\xbfkSQ\x14\xc7?\xe7\
\xbd\x18\x1b;H\x10\xd3\x16\x94&\xe8\xe6"\xa8\xed\xe8\xe6 \x08\x15\\D\xb0\x83\
\x8b(\x82\xb8\xb8\xfa/\x04\x121\x8b\xe8,(\xf8cP\x17Q*\x04\x17uPD\x14*\xd8\
\x98(\xe6%y\xc9{\xaf\xb9\xf7\x1d\x87\xf4\xc5D\xda\xd4\x03\x07\xee=\x97\xf3\
\xe1{\xbe\xf7^QUDd\x1f0\x03\xb8L\x8e\x06\xf0MU\xe3aEU\x01\x8e\x84a\xe8\xf5\
\xfb}k\x8c\xd1\xcd2\x0cC-\x95JE \x0f8\xaa:\xe8\xdd\x00,\xf4\xfb}\xeb\xfb\xbe\
v\xbb\xdda\xb6Z-m6\x9bZ\xaf\xd7\xd5\x18\xa3\xb5ZM\xcb\xe5\xf2\x18\x04@\x80\
\x05c\x8c\x06A\xa0Q\x14i\x10\x04\x1a\x04\x81v:\x1d\xf5<O\x1b\x8d\x86\x1ac\
\xb4\xd7\xeb\xa9\xef\xfbZ\xa9T\x8a@^U\x91\r\xc01cL\xd5Z;\x1c-\x8ecT\x15c\x0c\
Q\x14\x91\xcdf\xc7\xccH\xa5R\x8b\xc0\x9b\xd4h\xd1q\x1cDd\xb8\xb6\xd6\xe2\xba\
.\xe9t\x1a\xcf\xf3\x88\xe3\x18c\x0c\xb9\\\xee/h\x14\x904\'k\xd7u\xc7\xf6\tpL\
\xc9\xa4;\x1b\x85\x88\x08"\x92\x98\xfe\x7f\x80\xa4qt\xb4\x7f\xc3\xd9\x0e\x90\
@j\x8f+\xbc\xbb|\x94\xd7\xa7v\xb3r\xfe\x00\xe5Egy\xa2\x82Q\xa9k\x8fn\xd1\xae\
\xde\xe3\xf0\x99\x0b\xec,\x1c"x\xff\x8c\xcc\xab\xe7\x17\x9fN\x7f\xfc\xb4\xad\
\x02Ue\xf5~\x91\x83\xc7\x97\x98\xfa\xf2\x02\xb9{\x96]_\x1fP\x98\xdf\xe3\xe0\
\xe8\xd5-\x15$\x86\x89\x08\xeb\xb5U\xa6f\x0bp\xf2\xda\xf0<uc\x0e7\x96\xfc(@\
\x19<\xaa1\x08@*7G\xef\xed\x13\xa6\x1f^"\n~\xd0\x03:m\x17\xeb\xb2\xe6\xe8`\
\xd8\xd8Z\x1b\x001\x9b\xc4\xfc\xd2\x15>TW\xa8\x85\x19\xda\xee\x0e\x9a\xbf\
\x85\xcf\xdf%V\xb8)\x1b2\xf73\xf8\xce[zr\xfb\xc4\xcc\xf2^\xfb\xebtFe6\x14\
\xfd\xe9\xads\xe7\xdcKs\xfd\x0f\x0f\x8c\x1b\xb2\xb1\x9f\xaf5\x00\x00\x00\x00\
IEND\xaeB`\x82\xfa[\xfe\x94' )

def getScRemoveBitmap():
    return BitmapFromImage(getScRemoveImage())

def getScRemoveImage():
    stream = cStringIO.StringIO(getScRemoveData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScRevertData():
    return zlib.decompress(
'x\xda\x01Z\x02\xa5\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02\x11IDAT8\x8d}\x93\xcdJ\x1cA\x14\x85\xbf\
\xba\xd5\xdd\xa3\x8e4\x0c\xa2\xe3"\x8d\xb3\x9cY\x04\x17!\x91\xac\xdc\xc7]|\
\x91\xbcC\x9e \xa0\x8f\x11W>D\xc0l%\x18P$\x0b\x87\x1ea~\xc0\xf9\xeb\xae\xaa\
\x9b\x85N\x8f\x83\x89\x07\xee\xa2\xea\x9es\xeaP\xb7\xca\xa8*\x00\xc6\x987@\
\x13\xb0\xbc\x8e\x1e\xf0GU\x03\x00\xaa\xca\x93\xc9\xbb\xd9l6,\xcb\xd2;\xe7\
\xf4_5\x9b\xcd\xf4\xe4\xe4\xe4\x1b\xd0\x02DUW\x0c>\x94e\xe9\x1f\x1e\x1et<\
\x1eW5\x1a\x8dt0\x18h\x9e\xe7\xea\x9c\xd3n\xb7\xab\xa7\xa7\xa7\x95\x89M\xd3t\
\xa7(\xfd\xef\xa3\xa3O_\xf2<\x97\xdb\xdb[\xf2<g:\x9d\xb2\xbe\xbeN\x1c\xc7\
\xa8*!\x84j\xbd\xbf\xbf\x7f\xb0\xb7\xb7\'\xe7\xe7\xe7\xbf\xcc\xf7\xb3\xb3\
\x9f\x9dv;k6\x9b;\x9b\x9b\x9b\x88\x08\xe3\xf1\x98<\xcf\xb9\xb9\xb9\xe1\xf0\
\xf0\x10\xe7\x1c\xf3\xf9\x9cF\xa3\xb1r\x19Q\x14\x1dH\x19\x8a\xa8\xd5jE\xb5Z\
\xadj$IB\x96e\x8cF#D\x04k-I\x920\x1c\x0e\xe9\xf7\xfb\xf4z\xbd\xa5\x89\x0b\
\xce8\xe7\xa4\xdb\xedR\xaf\xd7\t!pwwG\xa7\xd3\xc1{\x8f\xb5\xcb\xa1\x18c^\xec\
I\xcd\xd4\xe2$I\xac\x88P\xaf\xd7\xe9\xf7\xfb\xac\xad\xad\x91\xa6)\xde{\x8c1X\
k\xb1\xd6\x12E\x11Q\x14\x11\xc7\xf12\x81\xf7\xc1\x0e\x06\x83\xa8(\n\x00\xca\
\xb2\xac\x9a\xce\xb9\xead\x11\xc1\x18\xf3\xe2QD"2[\x90\xbd\xf7\x14EQ\x11\x17\
\x06\x0b\x13U\xc5Z\xbb\x18\xfb\xa3\x01("B\x92$L&\x13\xe28\xae"\xce\xe7\xf3\
\x8a\xac\xaa\x18c\x08!\xac$\x90\xfb\xfb\xfb\xb3\xab\xab+\xb6\xb6\xb6H\xd3\
\x94v\xbbM\x96e\\\\\\\xb0\xb1\xb1Q\x89+\x81\x08"\xb2L\xd0h4\xbe^__\x9b\xcb\
\xcb\xcb\xcf\xdb\xdb\xdbo\xcb\xb2DU\xd9\xdd\xdd\xe5\xf8\xf8\xb8\x8a\xff?\x98\
\xa7h\x06x\xef\x9c\xfb\x01\xfc\x9f\xbd\x8a\x10E\xd1Gy\x8a\xa8@\xf0\xdeO\x81\
\xf0\xba\xeeQ\xec\xbd\x9f\x00\xde<\xfb\xce\x19\x8f\xdfY^S>\x83\x07z\x7f\x01q\
%(\xc7\x1f\xaai\x18\x00\x00\x00\x00IEND\xaeB`\x82z\xbc\x1c\xb9' )

def getScRevertBitmap():
    return BitmapFromImage(getScRevertImage())

def getScRevertImage():
    stream = cStringIO.StringIO(getScRevertData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScStatusData():
    return zlib.decompress(
'x\xda\x01V\x02\xa9\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02\rIDAT8\x8d}\x93\xbdj\x95A\x10\x86\x9f\xd9\
\xfdb\x8e&\x12\x12\x83?\xa0 j%X\x89Z\xa4\xb4\xb0\xb4\xb3\x11\x11,\xd4JP\xf1\
\x02\xf4\x02\x84@r\x17\x16v6\x82\xad\x82XX\x89\xa0\x88\x82!Q8\xc6$f\xbf\xb3;\
\xfbZ|\'\xc7D\xa2\x03\xc3\x14\xc3<\xfb2\xfb\x8eI\x02\xc0\xcc\x8e\x02\x87\x80\
\xc8\xffc\x05\xf8,\xa9\x02 \x89!\xe4lJ\xe9G\xce\xd9K)\xda-SJZXX\x98\x07\x8e\
\x03A\xd2\x0e\xc0\xf9\x9c\xb3\xaf\xaf\xafkccc\x94\xab\xab\xab\xea\xf7\xfbZ^^\
V)EKKKZ\\\\\x1cA\x9a\xa1|\x1b\xd6\x10c$\x84@\xad\x95\\\xe1g\x89\xa4bP"\xbd\
\x0c\xbd\xc9)\xae^\xbb~\'6cv\xfb\xd6\xcd\xc7&i\x0bp\xae\x94\xf2\xea\xd7\xc0\
\xf9\xb4n|X36\xb3\x98h\xc4Dpz\xb4\x1c\x99\xd9\xcf\xbe\x08\xbd\x06\xc6\x02L\
\x8e7\x17\x9a\xed\xdby\xfd\r\xde|o\xc8U\xec\t\xd0\x8b\x10\x1c\x02F\x08c\xac\
\xf4\xd7\xd8\x1b\x9cF\x85#\x07g\x01\x18\x01\xee>}\x7f\xef\xc5WC\x88\x80\xc8\
\x01J\x85*\xe8\x10`\x11\x8c@/F6\x8b\xfe\x00\x1e\xbe\xca\x0fr\xd5\xe5T\x84\
\xe8\x1a\xd1D\x89F\xa9\xe02f\xc7\x8d\xb1\x18\xd9,P\t\xfc\x1ct\x0f7\x8f^\xd7\
\xe9,\xbb\xdf\xbaB\x94\xe8\xc0"\x1a\x9c\x99\x81SS\xc6\xe9i\xa3\xd6\xee\xc7\
\xdc\xc5Z\x864T\xde\xb4\xae\x8b\xd9\x99\x1eT0\x81KT\xc1\x95\x93\xc6\xdca\x1b\
\xed\xc7\xcc\x90D\x8c\x91\xa9 \x0e4]\xaf\x198\'\x06.\x1b8TD\xa9\xe2\xd2\xb1\
\xc0\xdca\xdb\xf2\xc7\xc8pfF\xadu\x87-\x9b\xe4\xb2\x81+\x0c\\ru\x8b;:\xb1\
\xd3\xbb\xdbA!\x84\x1d\xbd\xd0\xbah\x1dZ\xc7Z\x87\xe4\xe2\xd9\x97:\x92\xbdU\
\xff\xcem\x00\xfa\xad\xcb\x92\x8bM\x17\xa9\x88\x97\xcb\x95\xf9\xb7\xfe\xcf\
\xe1!\xa0\x02\x84T\xf4<u*,\xb9H\x0e\xad\x8b\'\x1f\x9d\x1b/2\xef\xfab\x97\xa8\
\xee\xfe\x0bp\xdbv\xce\xc7\xe8\xce9\xec6\xb1K8\xb0\xf2\x1bP%S\xce\xf4\xae\
\x04\xeb\x00\x00\x00\x00IEND\xaeB`\x82\xe9T\x0e\xc7' )

def getScStatusBitmap():
    return BitmapFromImage(getScStatusImage())

def getScStatusImage():
    stream = cStringIO.StringIO(getScStatusData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getScUpdateData():
    return zlib.decompress(
'x\xda\x01\xdd\x02"\xfd\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x02\x94IDAT8\x8d\x85\x93KOSQ\x14\x85\xbfs\xef\
)\xb7\x14\xa1-\x81[\xdeE*(\xa0b\x04E\x0c\x03\xa3\x89\xd1\xa9:\xd2(\x13\x13bD\
g\x8e\xfd\t\xc6\x04&&\xc6\x99C\xe3\xc8\x91\x13\xe3#J$Q\x82\x18\x89Q@\xa0\x94\
Wy\xb4p\xdb\xfb8\x0e\n\x85&\x06W\xb2\x87\xfb\xdbg\x9d\xbd\xb6PJ\x01 \x84\xa8\
\x03"\x80\xce\xfeZ\x00\xa6\x95R\x1e\x00J)\xb6!\x9d\x96e\xad\xda\xb6\xed:\x8e\
\xa3\xfeU\x96e\xa9\xc1\xc1\xc1\xc7@#\xa0)\xa5\n\x00\xa7m\xdbvS\xa9\x94J\xa7\
\xd3\xf9Z[[S\xc9dR%\x12\t\xe58\x8e\x8a\xc7\xe3jhh(\x0f\x91\xdb\xcf\x17\xe7n\
\x9d\xeax9\xf2\\\x1b\x9f\xf9\xca\xd2F\x82\x8a\xd2*\x8eT\x1f\xa5\xad\xe6\x04\
\xf5\xe1\x83\x08!\x00\x08\x06\x83\xf4\xf5\xf5\xdd\x97R\xd2\xdf\xdf\xffH(\xa5\
\x18xz\xfd\xa6ry\xd8\xd3~&Vm\x1e!\xa3\xd5\xb2\x90\x9c\xe3\xcf\xfc0\xd2I\xd1\
\xdb|\x81\xd6\xc8\t\xc2\xe1p\xc1gH)\xbb\xe5\xbdg7zu\xa9?\xb8v\xf1J\xac4\x14%\
\xb9n\xb0\xb2e0k5\x12\x08E0\x8dO\xbc\x9dxM\xa8\xb8\x1c!\x04\x9e\xe7\xe18\x0e\
\xa6i\xe6 \xc0\xd5c\xb1\xd6c\x89`)V\xd6ar\xad\x84\xc9E\x9beg\x8a@\xcdO|\xc5\
\x16\xf6t\x9a\xf1\xf9Q\x1a+\x9bq]\x17]\xdf]\x94&\x84\xb8\xec\xaf\x082\xb59\
\x87\xee\x1d\xe0\xcb\xef\x14\xae?I*\xfa\x811\xf9\x99\xe1\x99q\xa2f\x1d?\xe6\
\xc6\x90R"\xa5\xc4\xe7\xf3\xed\xda\x00Z\x1ci\xb3\xbc\x9e\xe2\xfdr\x9a\xe4\
\xbaN\x91\xdf&lt\x90]\x88\xb2\xb5\xf4\x91@\xcc`qc\xbe`r\x1e\xa0P\x13\xda\xa6\
w8 k\x99\x9c\xf7\xf0|a&g\x8bH\x8f@\xc0_A\xa4<\xce\xf2\xfa\x12fY\x15\x00\xba\
\xae\xef\xac=g\x01\xc5\xab\xa5\xf8"\x99\xd5w\x18\xc64"\x9b\xa5\xc8_\x86?\xe8\
`\x84\x86i\nf\xf8>=Ek\xedq\x84\x10\x05\xcd9\x00\xbc\xf85;5\xda\xe0\x95p\xa8\
\xd2\x87Y\x9c\xa1\\\xb7\xa8)\x9d\xa3\xab\xea\x0f[\xe9\x15"\xe1:\x8e\xd7w\xe6\
\x1a4\rM\xd3\xf2\x80|\x0e\xb2\x19\xf7a\xc4l\x88\x05\x03\'\xd1D%>9\xce\xc4\
\xcc\'\xaaCQ\xce\xb7_\xa2\xab\xe9l\xc1d!\x04R\xcan\xa1\x94\xdaI\xe2\xed\xbbw\
\x06\x9e|\xdbNbeY\x15mu\x1dt4t\xd1d\xb6\xfc\xeb\xa8<)e\x8f\xd8s\x8d]\x99L\
\xe6\x8d\xae\xeb\xfemk\xfb\xc9s]w\xd30\x8cs{\x01\xf5\xe4\xce\xf9\x7f\xcd;r\
\x81\x85\xbf<\xa57\xbc\xd7\xdc\xd7h\x00\x00\x00\x00IEND\xaeB`\x82/\x03X\x16'\
 )

def getScUpdateBitmap():
    return BitmapFromImage(getScUpdateImage())

def getScUpdateImage():
    stream = cStringIO.StringIO(getScUpdateData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTextfileData():
    return zlib.decompress(
'x\xda\x01\xc3\x01<\xfe\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\
\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\
\x08\x08\x08|\x08d\x88\x00\x00\x01zIDAT8\x8d\x8d\x93\xb1\x8e\x1a1\x10\x86\
\x7fox\x06\xd2\\\xc4U\xd0Q\x10q\xd7\xd0\xf0\x14<\xd7IP\xf0D(\xa2\xa3\xa4#)\
\x10\xdb\xb0\x88\x05/\xeb\x99\xf9S\xb0\xeb\xb0\xe4 \x19i${\xac\xff\xfb\xc7c\
\xd9\x91\x84s\xee\x05\xc0W\x00_\xf0<R\x00?IZ\xac\x90\x04\x80\xefEQd!\x04\x15\
\x11~\x96EQp:\x9d~\x00x\x05\x90\x90\xbcj+\xc0[\x08A\xf3<\xe7\xe9t\x8ay8\x1c\
\xb8\xdf\xef\xb9\xdb\xed("\xdcn\xb7\x9c\xcdf\r\x08\x008\x00o"B\xef=/\x97\x0b\
\xbd\xf7\xf4\xde\xf3x<2\xcb2\xa6iJ\x11\xe1\xf9|f\x9e\xe7\x9c\xcf\xe7\x1f\x00\
^I\xc2U\x80\xa1\x88\xfcPU,\x16\x0b\x94e\x89\xb2,\x11B\x889\x99L\x1a\xc3h\xb5\
Z\xef\x00\x96\xad\xdbb\x92$\x18\x8dFq6\xaa\nU\x85\x88 \xcb2\x98\x19D\x04\xed\
v\xfb\x0f\xe8\x16\xe0\x9c\xc3r\xb9D\x08\x01"\x82\xb2,!"\x11df\x18\x8f\xc7\
\xcdN\xee\xdfi8\x1c6\xf6u\'f\x06U\xad\x87\xfe\x18\xb0Z\xad "\r\xe7Zhf\xf1\
\x8a\x0f\x01\xfd~\xff\xbe\x14\xc5\xf5\xfa)`\xbd^\xc7\xc1\x99Yl\x1d\x00\xcc\
\x0c\x83\xc1\xe09\xa0\xdb\xed6\x9c\xee\x1d\xef\xe3/\xc0f\xb3\x89\xceu\xdeBz\
\xbd\xdeC\x00\x01\xb8N\xa7\xf3\xd4\xb1\n\xab\xbac\xc2+\xdeT\xd5\xd7\x07\xff\
\x12\xab\xea\x19\x80\x02\x80\xab\xbe\xf37\\\xbfs\xf2?\xf6\x958%\xf9\xeb7\xc8\
\x9d\\Z\xf0x\xf7\xd6\x00\x00\x00\x00IEND\xaeB`\x82\xe4\n\xc4\x97' )

def getTextfileBitmap():
    return BitmapFromImage(getTextfileImage())

def getTextfileImage():
    stream = cStringIO.StringIO(getTextfileData())
    return ImageFromStream(stream)

